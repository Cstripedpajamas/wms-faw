"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.openAuth = void 0;
require("dingtalk-jsapi/entry/union");
var env_1 = require("dingtalk-jsapi/lib/env");
var openModal_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/openModal"));
var callComponent_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/callComponent"));
var platform = env_1.getENV().platform;
/**
 * @name openAuth
 * @category biz Helpers
 * @summary 调起授权弹框
 * @description
 * 支持小程序和H5微应用
 *
 * @param {Object} opt - 打开参数配置
 * @returns {Promise}
 */
function openAuth(opt) {
    if (!opt || typeof opt !== 'object') {
        throw new Error('openAuth error: option is missing or not object');
    }
    if ((!opt.corpId && opt.type == 1) || !opt.clientId) {
        throw new Error('openAuth error: corpId or clientId is missing');
    }
    var query = "type=" + (opt.type || 0) + "&clientId=" + opt.clientId;
    if (opt.corpId) {
        query = query + "&corpId=" + opt.corpId;
    }
    if (opt.rpcScope) {
        query = query + "&rpcScope=" + opt.rpcScope;
    }
    if (opt.fieldScope) {
        query = query + "&fieldScope=" + opt.fieldScope;
    }
    return openApp({
        miniAppId: '5000000000174977',
        query: query,
        panelHeight: 'percent50',
    }).then(function (data) {
        return (data || {
            status: 'cancel',
        });
    });
}
exports.openAuth = openAuth;
function openApp(opt) {
    return new Promise(function (resolve, reject) {
        var query = opt.query, _a = opt.panelHeight, panelHeight = _a === void 0 ? 'percent50' : _a;
        if (platform === env_1.ENV_ENUM.pc) {
            // PC端应用内授权
            openModal_1.default({
                url: "https://n.dingtalk.com/dingding/h5-common-authority/auth/index.html?" + query,
                size: 'middle',
                title: '授权申请',
            }).then(function (data) {
                // 用户进行了开通操作
                resolve(getPcResponseData(data));
            }).catch(function (e) {
                console.log(e);
                // 用户点击了取消，或直接关闭了页面
                resolve(null);
            });
            return;
        }
        // 移动端应用内授权
        var path = "pages/auth/index?" + query;
        openAppByOpenLink(opt.miniAppId, path, panelHeight).then(function (data) {
            resolve(data);
        });
    });
}
function openAppByOpenLink(miniAppId, path, panelHeight) {
    return callComponent_1.default({
        componentType: 'miniProgram',
        params: {
            miniAppId: miniAppId,
            page: path,
            target: 'float',
            panelHeight: panelHeight,
        },
        // @ts-ignore
        IMiniProgramParams: {
            miniAppId: miniAppId,
            page: path,
            target: 'float',
            panelHeight: panelHeight,
        },
    }).then(function (res) {
        console.log('callComponent res', res);
        if (res && res.detail) {
            return res.detail.extraData;
        }
        else {
            return null;
        }
    }).catch(function (err) {
        console.log('callComponent err', err);
        return null;
    });
}
/**
 * PC端处理应用内开通页传递回来的数据
 */
function getPcResponseData(res) {
    if (res === void 0) { res = ''; }
    var data = null;
    try {
        data = JSON.parse(res);
    }
    catch (e) {
        console.error(e);
    }
    return data;
}
