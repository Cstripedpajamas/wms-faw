"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.openTryoutSku = void 0;
var env_1 = require("dingtalk-jsapi/lib/env");
var sdkLib_1 = require("dingtalk-jsapi/lib/sdk/sdkLib");
var openLink_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/openLink"));
var openSlidePanel_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/openSlidePanel"));
var callComponent_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/callComponent"));
var navigateToMiniProgram_1 = __importDefault(require("dingtalk-jsapi/api/biz/navigation/navigateToMiniProgram"));
var isOpen = false;
var _a = env_1.getENV(), platform = _a.platform, version = _a.version, appType = _a.appType;
/**
 * @name openTryoutSku
 * @category biz Helpers
 * @summary 在应用内调起开通应用的授权弹窗
 * @description
 * 在应用内调起开通应用的授权弹窗
 * 支持小程序和H5微应用，在应用内调用开通弹窗
 *
 * @param {Object} opt - 打开参数配置
 * @param {String} [opt.corpId] - 组织ID
 * @param {Number} [opt.appId] - 待开通的应用ID
 * @param {String} [opt.token] - 链接上带入的purchaseToken值
 * @param {String} [opt.miniAppId] - 如果待开通应用是小程序，则需要传入该小程序的miniAppId
 * @param {String} [opt.notAutoJump] - 如果待开通应用是小程序，可以设置这个参数为true，开通后则不自动跳转小程序
 * @returns {Promise}
 * @example
 * // 在应用内调起开通应用的授权弹窗
 * openFloatModal({ corpId: 'xxx', appId: 123, token: 'yyy' })
 */
function openTryoutSku(opt) {
    if (!opt || typeof opt !== 'object') {
        throw new Error('openTryoutSku error: option is missing or not object');
    }
    if (!opt.corpId) {
        throw new Error('openTryoutSku error: corpId is missing');
    }
    var query = "corpId=" + (opt.corpId || '');
    if (opt.appId) {
        query = query + "&appId=" + opt.appId;
    }
    if (opt.token) {
        query = query + "&purchaseToken=" + opt.token;
    }
    if (opt.miniAppId) {
        query = query + "&miniAppId=" + opt.miniAppId;
    }
    if (opt.notAutoJump) {
        query = query + "&notAutoJump=" + opt.notAutoJump;
    }
    return openApp({
        miniAppId: '5000000000131503',
        query: query,
        panelHeight: 'percent83',
    }).then(function (data) {
        return (data || {
            action: 'unknown',
            corpId: opt.corpId,
        });
    });
}
exports.openTryoutSku = openTryoutSku;
function isInMiniApp() {
    return appType === 'MINI_APP';
}
/**
 * 是否支持半屏打开
 * @return {boolean}
 */
function isSupportFloat() {
    if (platform === 'android') {
        // 安卓大于5.1.10版本都支持半屏打开
        return sdkLib_1.compareVersion(version, '5.1.10');
    }
    // ios下
    if (isInMiniApp()) {
        // 小程序内不支持半屏打开
        return false;
    }
    // h5下
    return sdkLib_1.compareVersion(version, '5.1.40');
}
/**
 * 是否支持webview间消息传递
 * @return {boolean|*}
 */
function isSupportSendMsg() {
    if (isInMiniApp()) {
        // 小程序情况下，iOS下会存在canIUse判断能用，其实却不能用的情况
        if (platform === 'android') {
            return dd.canIUse('navigateToMiniProgram') && dd.canIUse('navigateBackMiniProgram');
        }
        return false;
    }
    // h5情况下
    if (platform === 'android') {
        // 安卓
        return sdkLib_1.compareVersion(version, '5.1.36');
    }
    // ios
    return sdkLib_1.compareVersion(version, '5.1.40');
}
function isSupportOpenComponent() {
    return sdkLib_1.compareVersion(version || '', '6.3.35');
}
function navigateToMiniProgram(opt) {
    if (isInMiniApp()) {
        return dd.navigateToMiniProgram(opt);
    }
    return navigateToMiniProgram_1.default(opt);
}
/**
 * 添加isSendMsg到url上
 * @param url
 * @return {string}
 */
function addIsSendMsgParam2Url(url) {
    if (url.indexOf('&') === -1) {
        return url + "?isSendMsg=true";
    }
    return url + "&isSendMsg=true";
}
function openApp(opt) {
    return new Promise(function (resolve, reject) {
        var query = opt.query, _a = opt.panelHeight, panelHeight = _a === void 0 ? 'percent83' : _a;
        if (platform === env_1.ENV_ENUM.pc) {
            // PC端应用内授权
            openSlidePanel_1.default({
                url: "https://h5.dingtalk.com/open-purchase/lightSku.html?" + query,
                title: '开通授权',
            }).then(function (data) {
                // 用户进行了开通操作
                resolve(getPcResponseData(data));
            }).catch(function (e) {
                window.console.log(e);
                // 用户点击了取消，或直接关闭了页面
                resolve(null);
            });
            return;
        }
        // 移动端应用内授权
        var path = "pages/index/index?" + query;
        if (isSupportOpenComponent()) {
            openAppByCallComponent(opt.miniAppId, path + "&isFromCallComponent=true", panelHeight).then(function (data) {
                resolve(data);
            });
            return;
        }
        var isSendMsg = isSupportSendMsg();
        var isFloat = isSupportFloat();
        if (isSendMsg) {
            // 支持传递数据，用navigateToMiniProgram打开新页面
            var ddAppParams = {
                // 安卓情况下，页面路径需要通过page参数传入
                page: addIsSendMsgParam2Url(path),
                panelHeight: panelHeight,
            };
            if (isFloat) {
                ddAppParams.ddMode = 'float';
            }
            isOpen = true;
            navigateToMiniProgram({
                appId: opt.miniAppId,
                ddAppParams: ddAppParams,
                // iOS情况下，页面路径需要通过path参数传入，ddAppParams下的page参数目前iOS不认
                path: addIsSendMsgParam2Url(path),
            }).catch(function () {
                // 不能用navigateToMiniProgram打开时的补救措施
                openAppByOpenLink(opt.miniAppId, path, panelHeight).catch(function (err) {
                    isOpen = false;
                    reject({
                        err: err,
                        message: 'openLink failed',
                    });
                });
            });
        }
        else {
            openAppByOpenLink(opt.miniAppId, path, panelHeight).catch(function (err) {
                isOpen = false;
                reject({
                    err: err,
                    message: 'openLink failed',
                });
            });
        }
        if (!isInMiniApp() && (platform === env_1.ENV_ENUM.ios || platform === env_1.ENV_ENUM.android)) {
            // h5接收数据
            registerResumeHandler(resolve);
        }
    });
}
function openAppByCallComponent(miniAppId, path, panelHeight) {
    return callComponent_1.default({
        componentType: 'miniProgram',
        params: {
            miniAppId: miniAppId,
            page: path,
            target: 'float',
            panelHeight: panelHeight,
        },
        // @ts-ignore
        IMiniProgramParams: {
            miniAppId: miniAppId,
            page: path,
            target: 'float',
            panelHeight: panelHeight,
        },
    }).then(function (res) {
        console.log('callComponent res', res);
        if (res && res.detail) {
            return res.detail.extraData;
        }
        else {
            return null;
        }
    }).catch(function (err) {
        console.log('callComponent err', err);
        return null;
    });
    ;
}
function openAppByOpenLink(miniAppId, path, panelHeight) {
    // 不支持传递数据，用openLink打开新页面
    var url = "dingtalk://dingtalkclient/action/open_mini_app?miniAppId=" + miniAppId + "&page=" + encodeURIComponent(path);
    var isFloat = isSupportFloat();
    if (isFloat) {
        url += "&ddMode=float&panelHeight=" + panelHeight;
    }
    return openLink_1.default({
        url: url,
        enableShare: false,
    });
}
var resumeHandler = null;
/**
 * H5情况下注册接收消息的事件
 */
function registerResumeHandler(resolve) {
    // 清除之前遗留的事件
    // @ts-ignore resume不是标准的事件，因此需要ignore类型检查
    document.removeEventListener('resume', resumeHandler);
    resumeHandler = function (res) {
        if (!isOpen) {
            return;
        }
        isOpen = false;
        var data = getMobileResponseData(res);
        resolve(data);
        // @ts-ignore
        document.removeEventListener('resume', resumeHandler);
    };
    // @ts-ignore
    document.addEventListener('resume', resumeHandler);
}
/**
 * 移动端处理应用内开通页传递回来的数据
 */
function getMobileResponseData(res) {
    if (isInMiniApp()) {
        if (platform === 'android') {
            // 安卓 小程序情况下
            return res && res.referrerInfo && res.referrerInfo.extraData;
        }
        // iOS 小程序情况下，小程序还不支持通信
        return;
    }
    if (platform === 'android') {
        // 安卓 H5情况下
        var referrerInfo_1 = res && res.detail && res.detail.referrerInfo;
        var data_1 = {};
        try {
            data_1 = JSON.parse(referrerInfo_1);
        }
        catch (e) {
            console.error(e);
        }
        return data_1.extraData;
    }
    // iOS H5情况下
    var referrerInfo = res && res.detail && res.detail.data && res.detail.data.referrerInfo;
    var data = {};
    try {
        data = JSON.parse(referrerInfo);
    }
    catch (e) {
        console.error(e);
    }
    return data.extraData;
}
/**
 * PC端处理应用内开通页传递回来的数据
 */
function getPcResponseData(res) {
    if (res === void 0) { res = ''; }
    var data = null;
    try {
        data = JSON.parse(res);
    }
    catch (e) {
        console.error(e);
    }
    return data;
}
