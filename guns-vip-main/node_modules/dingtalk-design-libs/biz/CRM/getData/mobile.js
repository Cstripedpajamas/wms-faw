"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var openLink_1 = __importDefault(require("dingtalk-jsapi/api/biz/util/openLink"));
var sdkLib_1 = require("dingtalk-jsapi/lib/sdk/sdkLib");
var env_1 = require("dingtalk-jsapi/lib/env");
var common_1 = require("./common");
var _a = env_1.getENV(), platform = _a.platform, version = _a.version, appType = _a.appType;
/**
 * 获取一个随机token（很短）
 * @memberof module:string
 * @returns {string} 随机token
 * @example
 * getRandomToken(); // 返回一个随机值 e.g. 'afc3', '038c', ...
 */
function getRandomToken() {
    return Math.floor((1 + Math.random()) * 0x10000)
        .toString(16)
        .substring(1);
}
function getChannelId() {
    return "ddcrm_get_data_" + getRandomToken();
}
/**
 * 是否是在小程序下
 */
function isInMiniApp() {
    return appType === 'MINI_APP';
}
/**
 * 是否支持半屏打开
 * @return {boolean}
 */
function isSupportFloat() {
    if (platform === 'android') {
        // 安卓大于5.1.10版本都支持半屏打开
        return sdkLib_1.compareVersion(version, '5.1.10');
    }
    // ios下
    if (isInMiniApp()) {
        // 小程序内不支持半屏打开
        return false;
    }
    // h5下
    return sdkLib_1.compareVersion(version, '5.1.40');
}
/**
 * 半屏打开
 * @param page
 * @param panelHeight
 */
function openAppByOpenLink(page, panelHeight) {
    // 不支持传递数据，用openLink打开新页面
    var url = "dingtalk://dingtalkclient/action/open_micro_app?ddMode=float&containerType=online&page=" + encodeURIComponent(page);
    var isFloat = isSupportFloat();
    if (isFloat) {
        url += "&ddMode=float&panelHeight=" + panelHeight;
    }
    return openLink_1.default({
        url: url,
        enableShare: false,
    });
}
var resumeHandler = null;
function grantCRMData(params) {
    return new Promise(function (res, rej) {
        var channelId = getChannelId();
        var wa = window;
        wa.__grantCRMDataChannelId = channelId;
        var url = common_1.getCRMAuthUrl(params) + "?channelId=" + channelId;
        // @ts-ignore resume不是标准的事件，因此需要ignore类型检查
        document.removeEventListener('resume', resumeHandler);
        resumeHandler = function () {
            common_1.checkHasAuth(params.corpId, params.suiteKey, params.instanceId)
                .then(function () {
                res && res('success');
            })
                .catch(function () {
                rej && rej('canceled'); // eslint-disable-line
            });
        };
        openAppByOpenLink(url, 'percent45'); // 监听之前先打开那个页面
        // @ts-ignore resume不是标准的事件，因此需要ignore类型检查
        document.addEventListener('resume', resumeHandler);
    });
}
exports.default = grantCRMData;
