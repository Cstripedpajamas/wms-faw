"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkHasAuth = exports.getCRMAuthUrl = void 0;
var axios_1 = __importDefault(require("axios"));
var query_string_1 = require("query-string");
/**
 * 获取下客户管理授权页的url
 * @param isPre
 */
function getCRMAuthUrl(params) {
    var corpId = params.corpId, upgradeType = params.upgradeType, suiteKey = params.suiteKey, instanceId = params.instanceId, isPre = params.isPre;
    return "https://" + (isPre ? 'pre-' : '') + "aflow.dingtalk.com/dingtalk/mobile/crmapp.htm?noValid=true&dd_share=false&showmenu=true&pcredirect=self&dd_progress=false&corpid=" + corpId + "&swfrom=dinguilibs" + (isPre ? '' : '&dd_func_rt=true&dd_rt_type=1') + "#/crmApp/open/DataGrant/" + upgradeType + "/" + suiteKey + "/" + instanceId;
}
exports.getCRMAuthUrl = getCRMAuthUrl;
function getCookie(name) {
    var reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
    var arr = document.cookie.match(reg);
    if (!arr) {
        return '';
    }
    return unescape(arr[2]);
}
/**
 * 检测某条数据有没有授权好
 * @param corpId 企业id
 * @param suiteKey isv的suiteKey
 * @param instanceId 实例id
 * @returns
 */
exports.checkHasAuth = function (corpId, suiteKey, instanceId) {
    var host = "https://" + (location.hostname.indexOf('pre-') >= 0 ? 'pre-' : '') + "api.hammer.dingtalk.com";
    var headers = {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        _csrf_token_: getCookie('_csrf_token_'),
        'x-client-corpId': corpId,
        'client-corpid': corpId,
    };
    return new Promise(function (resolve, reject) {
        axios_1.default
            .get(host + "/crm/open/authCheck?" + query_string_1.stringify({
            corpId: corpId,
            suiteKey: suiteKey,
            dataId: instanceId,
        }), {
            headers: headers,
        })
            .then(function (result) {
            var data = result.data;
            var errorCode = data.errorCode;
            var errorMessage = data.errorMsg;
            if (!errorCode) {
                resolve && resolve(true);
            }
            else {
                var error = new Error(errorMessage);
                reject && reject(error);
            }
        })
            .catch(function (error) {
            reject && reject(error);
        });
    });
};
